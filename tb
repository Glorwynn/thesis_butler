#!/bin/bash
###################
## Thesis Butler ##
###################

bold=$(tput bold)
normal=$(tput sgr0)

function help {
    echo -e "Thesis Butler - commandes"
    echo
    echo -e "${bold}new-part${normal} <nom_partie>"
    echo -e "\tCréer une nouvelle partie dans la racine de la thèse"
    echo
    echo -e "${bold}new-chapter${normal} [nom_partie] <nom_chapitre>"
    echo -e "\tCréer un nouveau chapitre dans la racine de la thèse ou dans la partie"
    echo -e "\tnom_partie."
    echo
    echo -e "${bold}new-bib${normal} <nom_biblio>"
    echo -e "\tCréer un nouveau fichier de bibliographie et son importantion dans la"
    echo -e "\tthèse."
    echo
    echo -e "${bold}go-write${normal} <nom>"
    echo -e "\tGénère de fichier de rédaction de la partie ou du chapitre indiqué, en"
    echo -e "\tfonction du contenu du plan détaillé"
    echo
    echo -e "${bold}content${normal} [nom]"
    echo -e "\tAffiche le plan de la thèse, partie ou chapitre"
    echo
    echo -e "${bold}these${normal} <action>"
    echo -e "\tExécute l'action en argument à la thèse."
    echo
    echo -e "${bold}part${normal} <nom_partie> <action>"
    echo -e "\tExécute l'action en argument à la partie."
    echo
    echo -e "${bold}chapter${normal} [nom_partie] <nom_chapitre> <action>"
    echo -e "\tExécute l'action en argument au chapitre."
    echo
    echo -e "${bold}clean${normal} [nom_partie] [nom_chapitre]"
    echo -e "\tExécute l'action en argument à la thèse."

}

case $1 in
    'update' )
        python2.7 office/thesis_butler.py update
    ;;
    'new-bib' )
        if [[ $# -lt 2 ]]; then
            echo "[ERROR] Le nombre de paramètres n'est pas valide"
            help
        else
            python2.7 office/thesis_butler.py newbib $2
        fi
        ;;
    'these' )
        make $2
        ;;
    'part' )
        if [[ $2 == "create" ]]; then
            if [[ $# -lt 4 ]]; then
                echo "[ERROR] Le nombre de paramètres n'est pas valide"
                help
            else
                python2.7 office/thesis_butler.py newpart "$3" "$4"
            fi
        else
            if [ -d "$2" ]; then
                cd $2
                make $3
            else
                echo "[ERROR] La partie $2 n'existe pas"
                exit
            fi
        fi
    ;;
    'chapter' )
        if [[ $2 == "create" ]]; then
            if [[ $# -lt 4 ]]; then
                echo "[ERROR] Le nombre de paramètres n'est pas valide"
                help
            else
                if [[ $# -gt 4 ]]; then
                    python2.7 office/thesis_butler.py newchapter "$3" "$4" "$5"
                else
                    python2.7 office/thesis_butler.py newchapter "$3" "$4"
                fi
            fi
        else
            if [ -d "$2" ]; then
                cd $2
                make $3
            else
                echo "[ERROR] Le chapitre $2 n'existe pas"
                exit
            fi
        fi
    ;;
    'thesis' )
        make $2
    ;;
    'clean' )
        dir=these
        if [ $# -ne 1 ]
        then
            if [ -d "$2" ]; then
                dir=$2
                cd $2
            else
                echo "[ERROR] Le chapitre $2 n'existe pas"
                exit
            fi
        fi
        rm -f *.ps *.log *.aux *.out *.dvi *.bbl *.blg *.toc
        echo "[OK] $dir nettoyé"
    ;;
    *)
        help
    ;;
esac
